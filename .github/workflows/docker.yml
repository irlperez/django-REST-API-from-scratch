# following this page -> https://www.honeybadger.io/blog/django-test-github-actions/

# workflow    - a YAML file that contains a list of instructions for processes.
# job         - step by step instructions for an action
# step        - tasks that can run commands in a job


name: test_docker # name of the actual test, it can be anything
on: [push] # we could also include PR like so: on: [pull_request, push]
jobs:
  build_docker: # no spaces
    runs-on: ubuntu-latest # operating system our code will run on
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: set up docker buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/irlperez/app:latest
            ghcr.io/irlperez/app:1.0.0
  run_docker:
    runs-on: ubuntu-latest
    needs: build_docker
    steps:
      -
        name: run docker
        run: docker compose up -d
      - 
        name: stop docker
        run: docker compose down -t 10

# thank you Dan. By creating a docker-compose.yml we're able to start an image in the background without it taking over our CLI. Then run a second command to shut it down.  

# had to remove the t from -it -> https://stackoverflow.com/questions/43099116/error-the-input-device-is-not-a-tty


# resources
# https://docs.docker.com/samples/django/
# https://docs.docker.com/build/ci/github-actions/
# 
